{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\dashboard_projet_spark\\\\src\\\\components\\\\KibanaPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst KibanaPage = () => {\n  _s();\n  const iframeContainerRef = useRef(null);\n  const {\n    datacenter\n  } = useParams(); // Récupère le paramètre de l'URL (datacenter1 ou datacenter2)\n\n  useEffect(() => {\n    // Détermine l'URL du dashboard en fonction du datacenter\n    const dashboardUrl = datacenter === \"datacenter1\" ? \"http://localhost:5601/app/dashboards#/view/DATACENTER1_ID?embed=true\" : \"http://localhost:5601/app/dashboards#/view/DATACENTER2_ID?embed=true\";\n\n    // Crée un iframe pour afficher le dashboard Kibana\n    const iframe = document.createElement(\"iframe\");\n    iframe.src = dashboardUrl;\n    iframe.style.width = \"100%\";\n    iframe.style.height = \"100%\";\n    iframe.style.border = \"none\";\n    iframe.title = `Kibana Dashboard ${datacenter}`;\n\n    // Ajoute l'iframe au conteneur\n    if (iframeContainerRef.current) {\n      iframeContainerRef.current.appendChild(iframe);\n    }\n\n    // Nettoie l'iframe lors du démontage\n    return () => {\n      if (iframeContainerRef.current) {\n        iframeContainerRef.current.innerHTML = \"\";\n      }\n    };\n  }, [datacenter]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"100vw\",\n      height: \"100vh\",\n      overflow: \"hidden\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: iframeContainerRef,\n      style: {\n        width: \"100%\",\n        height: \"100%\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(KibanaPage, \"HRQNzmlB2qVg4xJ9aJSXNASHrQ0=\", false, function () {\n  return [useParams];\n});\n_c = KibanaPage;\nexport default KibanaPage;\nvar _c;\n$RefreshReg$(_c, \"KibanaPage\");","map":{"version":3,"names":["React","useEffect","useRef","useParams","jsxDEV","_jsxDEV","KibanaPage","_s","iframeContainerRef","datacenter","dashboardUrl","iframe","document","createElement","src","style","width","height","border","title","current","appendChild","innerHTML","overflow","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/USER/Desktop/dashboard_projet_spark/src/components/KibanaPage.js"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst KibanaPage = () => {\r\n  const iframeContainerRef = useRef(null);\r\n  const { datacenter } = useParams(); // Récupère le paramètre de l'URL (datacenter1 ou datacenter2)\r\n\r\n  useEffect(() => {\r\n    // Détermine l'URL du dashboard en fonction du datacenter\r\n    const dashboardUrl =\r\n      datacenter === \"datacenter1\"\r\n        ? \"http://localhost:5601/app/dashboards#/view/DATACENTER1_ID?embed=true\"\r\n        : \"http://localhost:5601/app/dashboards#/view/DATACENTER2_ID?embed=true\";\r\n\r\n    // Crée un iframe pour afficher le dashboard Kibana\r\n    const iframe = document.createElement(\"iframe\");\r\n    iframe.src = dashboardUrl;\r\n    iframe.style.width = \"100%\";\r\n    iframe.style.height = \"100%\";\r\n    iframe.style.border = \"none\";\r\n    iframe.title = `Kibana Dashboard ${datacenter}`;\r\n\r\n    // Ajoute l'iframe au conteneur\r\n    if (iframeContainerRef.current) {\r\n      iframeContainerRef.current.appendChild(iframe);\r\n    }\r\n\r\n    // Nettoie l'iframe lors du démontage\r\n    return () => {\r\n      if (iframeContainerRef.current) {\r\n        iframeContainerRef.current.innerHTML = \"\";\r\n      }\r\n    };\r\n  }, [datacenter]);\r\n\r\n  return (\r\n    <div style={{ width: \"100vw\", height: \"100vh\", overflow: \"hidden\" }}>\r\n      <div ref={iframeContainerRef} style={{ width: \"100%\", height: \"100%\" }} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default KibanaPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAMC,kBAAkB,GAAGN,MAAM,CAAC,IAAI,CAAC;EACvC,MAAM;IAAEO;EAAW,CAAC,GAAGN,SAAS,CAAC,CAAC,CAAC,CAAC;;EAEpCF,SAAS,CAAC,MAAM;IACd;IACA,MAAMS,YAAY,GAChBD,UAAU,KAAK,aAAa,GACxB,sEAAsE,GACtE,sEAAsE;;IAE5E;IACA,MAAME,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;IAC/CF,MAAM,CAACG,GAAG,GAAGJ,YAAY;IACzBC,MAAM,CAACI,KAAK,CAACC,KAAK,GAAG,MAAM;IAC3BL,MAAM,CAACI,KAAK,CAACE,MAAM,GAAG,MAAM;IAC5BN,MAAM,CAACI,KAAK,CAACG,MAAM,GAAG,MAAM;IAC5BP,MAAM,CAACQ,KAAK,GAAG,oBAAoBV,UAAU,EAAE;;IAE/C;IACA,IAAID,kBAAkB,CAACY,OAAO,EAAE;MAC9BZ,kBAAkB,CAACY,OAAO,CAACC,WAAW,CAACV,MAAM,CAAC;IAChD;;IAEA;IACA,OAAO,MAAM;MACX,IAAIH,kBAAkB,CAACY,OAAO,EAAE;QAC9BZ,kBAAkB,CAACY,OAAO,CAACE,SAAS,GAAG,EAAE;MAC3C;IACF,CAAC;EACH,CAAC,EAAE,CAACb,UAAU,CAAC,CAAC;EAEhB,oBACEJ,OAAA;IAAKU,KAAK,EAAE;MAAEC,KAAK,EAAE,OAAO;MAAEC,MAAM,EAAE,OAAO;MAAEM,QAAQ,EAAE;IAAS,CAAE;IAAAC,QAAA,eAClEnB,OAAA;MAAKoB,GAAG,EAAEjB,kBAAmB;MAACO,KAAK,EAAE;QAAEC,KAAK,EAAE,MAAM;QAAEC,MAAM,EAAE;MAAO;IAAE;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvE,CAAC;AAEV,CAAC;AAACtB,EAAA,CArCID,UAAU;EAAA,QAESH,SAAS;AAAA;AAAA2B,EAAA,GAF5BxB,UAAU;AAuChB,eAAeA,UAAU;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}